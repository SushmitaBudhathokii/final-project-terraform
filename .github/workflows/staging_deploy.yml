name: "Terraform - Staging"
# https://gaunacode.com/deploying-terraform-at-scale-with-github-actions
on:
  push:
    branches:
      - staging
    paths:
      - modules/**
      - network/**
      - webserver/**
    
  pull_request:
    branches:
      - staging
    paths:
      - modules/**
      - network/**
      - webserver/**

permissions:
  contents: read
  pull-requests: write

jobs:
  terraform_modules:
    name: "Terraform Modules"
    runs-on: ubuntu-latest
    environment: staging
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      AWS_ACCESS_KEY_ID:  ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY:  ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_SESSION_TOKEN:  ${{ secrets.AWS_SESSION_TOKEN }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.1.9
          terraform_wrapper: true

      - name: Terraform fmt (modules)
        run: terraform fmt
        continue-on-error: true
        working-directory: ./modules/network

      - name: Terraform Init (modules)
        run: terraform init
        working-directory: ./modules/network

      - name: Terraform Validate (modules)
        run: terraform validate -no-color
        working-directory: ./modules/network

      - name: Terraform Plan (modules)
        run: |
          terraform init -input=false -no-color
          terraform plan -input=false -no-color -out=tf.plan
          terraform show -no-color tf.plan > tf.plan.txt  # Convert binary plan to readable format
        working-directory: ./modules/network

      - name: Terraform Apply (modules)
        if: github.ref == 'refs/heads/staging' && github.event_name == 'push'
        run: terraform apply -input=false tf.plan
        working-directory: ./modules/network
